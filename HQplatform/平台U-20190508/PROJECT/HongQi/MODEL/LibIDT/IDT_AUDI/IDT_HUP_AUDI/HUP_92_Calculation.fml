<?xml version="1.0" encoding="utf-8" ?>
<Function description="service 92 HUP:计算">
<Inputs>
<Variable id="pHndl" type="3" data="-1" description="通讯句柄"/>
<Variable id="IDT_Timeout" type="3" data="5"/>
<Variable id="Berechnungsart" type="3" data="0" description="0 = Warping; 1 = BH; 2 = HW; 3 = BGW; 4 = Dynamik; 5 = Warping lesen"/>
<Variable id="Bildposition_1" type="3" data="0" description="Bildposition 1 - Werte von 1 - 9; 0 = nicht verwendet"/>
<Variable id="Bildposition_2" type="3" data="0" description="Bildposition 2 - Werte von 1 - 9; 0 = nicht verwendet"/>
<Variable id="sendMode" type="3" data="0" description="0:不连发 n :连发n次，主要用在信号不好 丢包环境下"/>
</Inputs>
<Outputs>
<Variable id="ret" type="3" data="0" description="返回值,0:没有正在被执行的service;1:执行成功;2:service正在执行中;-1:执行失败"/>
<Variable id="Ergebnis_fertig" type="3" data="0"/>
<Variable id="Berechnart_Out" type="3" data="0" description="0 = Warping; 1 = BH; 2 = HW; 3 = BGW; 4 = Dynamik; 5 = Warping lesen"/>
<Variable id="Bild_Pos_1_Out" type="3" data="0" description="Bildposition 1 - Werte von 1 - 9; 0 = nicht verwendet"/>
<Variable id="Bild_Pos_2_Out" type="3" data="0" description="Bildposition 2 - Werte von 1 - 9; 0 = nicht verwendet"/>
<Variable id="Bild_Pos_3_Out" type="3" data="0" description="Bildposition 3 - Werte von 1 - 9; 0 = nicht verwendet"/>
<Variable id="Bild_Pos_4_Out" type="3" data="0" description="Bildposition 4 - Werte von 1 - 9; 0 = nicht verwendet"/>
<Variable id="Bild_Pos_5_Out" type="3" data="0" description="Bildposition 5 - Werte von 1 - 9; 0 = nicht verwendet"/>
<Variable id="revTel" type="8" data="" description="返回报文"/>
</Outputs>
<Script>--[[*****************************************************************************
IDT Function  HUP Service 92
input parameter:pHndl,IDT_Timeout,Berechnungsart,Bildposition_1,Bildposition_2,sendMode
output parameter :ret,Ergebnis_fertig,Berechnart_Out,Bild_Pos_1_Out,Bild_Pos_2_Out,Bild_Pos_3_Out,Bild_Pos_4_Out,
                           Bild_Pos_5_Out,revTel

12/30/2016     created by viforce
******************************************************************************--]]
local idt_tel = ""
local zero = "\x00"
local ID_len = 0
ret = -1

sendMode = sendMode or 0

idt_tel = idt_tel .. string.char(engine.UdpHandleVarGet(pHndl, "_SNDMARK"));    --设置发送报文第1字节
idt_tel = idt_tel .. zero:rep(43);   -- 基本帧长度 44  后补零 

idt_tel = LibIDT.idtSetBytes(idt_tel,2,1,"\x5C");    -- 设置service号,第2字节
idt_tel = LibIDT.idtSetBytes(idt_tel,5,1,string.char(Berechnungsart));  

if(Berechnungsart == 0) then
-- Image should always be saved during the warping calculation
	idt_tel = LibIDT.idtSetBytes(idt_tel,6,1,"\x01"); 
-- Currently no indication of the roll angle - always 0! - the foundation for the future 
	idt_tel = LibIDT.idtSetBytes(idt_tel,7,1,"\x00");  
        idt_tel = LibIDT.idtSetBytes(idt_tel,8,1,"\x00"); 
        idt_tel = LibIDT.idtSetBytes(idt_tel,9,1,"\x00");
        idt_tel = LibIDT.idtSetBytes(idt_tel,10,1,"\x00"); 
-- Image positions 3,4,5 are set to 0 with warping calculation       
        idt_tel = LibIDT.idtSetBytes(idt_tel,13,1,"\x00"); 
        idt_tel = LibIDT.idtSetBytes(idt_tel,14,1,"\x00"); 
        idt_tel = LibIDT.idtSetBytes(idt_tel,15,1,"\x00"); 
-- Weighting factors       
        idt_tel = LibIDT.idtSetBytes(idt_tel,21,1,"\x01"); 
        idt_tel = LibIDT.idtSetBytes(idt_tel,22,1,"\x00"); 
        idt_tel = LibIDT.idtSetBytes(idt_tel,23,1,"\x00"); 
        idt_tel = LibIDT.idtSetBytes(idt_tel,24,1,"\x00"); 
        idt_tel = LibIDT.idtSetBytes(idt_tel,25,1,"\x00"); 
           
elseif(Berechnungsart == 4) then
--Type trimming height image; ASCII: BGW = 0x42; 0x47; 0x57
	idt_tel = LibIDT.idtSetBytes(idt_tel,31,1,"\x42"); 
        idt_tel = LibIDT.idtSetBytes(idt_tel,32,1,"\x47"); 
        idt_tel = LibIDT.idtSetBytes(idt_tel,33,1,"\x57"); 
        idt_tel = LibIDT.idtSetBytes(idt_tel,34,1,"\x00"); 
end

if(Bildposition_1 ~= 0) then
	idt_tel = LibIDT.idtSetBytes(idt_tel,11,1,string.char(Bildposition_1));  
end

if(Bildposition_2 ~= 0) then
	idt_tel = LibIDT.idtSetBytes(idt_tel,12,1,string.char(Bildposition_2));
end


--发送报文并校验返回报文是否正确
err, revTel = LibIDT.idtDataExchange(idt_tel,IDT_Timeout,pHndl,sendMode)

ret = engine.UdpHandleVarGet(pHndl, "_CURRENTSEVACK")

if(ret == 1 and err == true) then

-- local lastRevTel = engine.UdpHandleVarGet(pHndl, "_LASTREVTEL");
local lastRevTel = revTel
engine.println("### RESULT SERVER 92 :" ..LibIDT.idthex2str(lastRevTel));

Ergebnis_fertig = lastRevTel:sub(13,13):byte();
Berechnart_Out = lastRevTel:sub(14,14):byte();
Bild_Pos_1_Out = lastRevTel:sub(15,15):byte();
Bild_Pos_2_Out = lastRevTel:sub(16,16):byte();
Bild_Pos_3_Out = lastRevTel:sub(17,17):byte();
Bild_Pos_4_Out = lastRevTel:sub(18,18):byte();
Bild_Pos_5_Out = lastRevTel:sub(19,19):byte();

end
</Script></Function>

