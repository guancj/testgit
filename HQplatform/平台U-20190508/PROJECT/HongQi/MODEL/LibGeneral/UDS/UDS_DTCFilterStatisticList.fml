<?xml version="1.0" encoding="utf-8" ?>
<Function>
<Inputs>
<Variable id="UDS_DTC_CODE" type="8" data="" description="UDS返回的DTC Table"/>
<Variable id="Filter_Pcode" type="8" data="{}" description="过滤或者忽略相应的DTC   {} ：不过滤 例 {&quot;Bxxxxxx&quot;,&quot;&quot;}"/>
<Variable id="ViewList_Flag" type="11" data="true" description="false--不需要显示  true-- 需要显示"/>
<Variable id="Timeout" type="3" data="0" description="显示时长(MS)"/>
<Variable id="section" type="8" data="&quot;&quot;" description="dtc_list.ini  section for this project"/>
</Inputs>
<Outputs>
<Variable id="DTC_Table_list_Pcode" type="8" data="" description="Pcode 列表"/>
<Variable id="DTC_Table_list_Pcode_String" type="8" data="" description="Pcode 字符串"/>
</Outputs>
<Script>
--[[*****************************************************************************

******************************************************************************--]]

local Filter_Pcode_tmp  = Filter_Pcode;
local UDS_DTC_CODE_tmp = UDS_DTC_CODE;
local i,k,value;
local sText,sCode;
local j = 1;
local statView = "";
local err = 0;
local statValue = "";
local listElement,listElement_tmp;
local FilterFlag = false;

DTC_Table_list_Pcode = {};
DTC_Table_list_Pcode_String = {};
if (engine.LastError ~= 0) then engine.StatValue = "Service Error " ;engine.LastError = 1 ;return end;

if(UDS_DTC_CODE_tmp == nil or #UDS_DTC_CODE_tmp == 0 ) then engine.StatValue = "No dtc" ; engine.LastError = 0 ;return end;


if(next(UDS_DTC_CODE_tmp) ~= nil) then

	if(next(Filter_Pcode_tmp) ~= nil)then      --需要过滤
	
		for i, sCode in pairs(UDS_DTC_CODE_tmp) do 
		
			sText = LibGeneral.Read_ini(section,sCode,".\\dtctext.ini");
			if (sText == nil) then
				sText = ""
			end
			FilterFlag = false;
			for i, value in pairs(Filter_Pcode_tmp) do 
				if(sCode == value )  then  
					FilterFlag = true;
				end;
			end;
		
			if( FilterFlag == false) then 
			
			DTC_Table_list_Pcode[j] = sCode;
			DTC_Table_list_Pcode_String[j] = sText;
			j = j + 1;
			statView = statView .. sCode .. ":" .. sText .."\x0A"
			engine.println("sCode :"..tostring(sCode).."  sText :"..tostring(sText));
			end;
	
		end;
		engine.println(statView);
		if(next(DTC_Table_list_Pcode) ~= nil) then
		err = 1;
		statValue = statView;
		else
		err = 0;
		statValue = "No DTC";
		end;
		
	else
	
		for i, sCode in pairs(UDS_DTC_CODE_tmp) do 
		
		sText = LibGeneral.Read_ini(section,sCode,".\\dtctext.ini");
                if (sText == nil) then
			sText = ""
		end
		engine.println("sCode :"..tostring(sCode).."  sText :"..tostring(sText));
		
		
		DTC_Table_list_Pcode[j] = sCode;
		DTC_Table_list_Pcode_String[j] = sText;
		j = j + 1;
		statView = statView .. sCode .. ":" .. sText .. "\x0A"
		end;
		engine.println(statView);
		err = 1;
		statValue = statView;
	
	end;
	
	
else
	err = 0;
	statValue = "No DTC";
	
end;


if( err ~= 0 and ViewList_Flag == true) then

	engine.ListClear();
	for i, listElement in pairs(DTC_Table_list_Pcode_String) do 
	   
	     listElement_tmp = DTC_Table_list_Pcode[i]..":"..listElement;
	     engine.ListAddString(listElement_tmp,false);
	end;

	engine.DialogBackColor = "red";
	engine.SelectLayout(1);
	engine.ShowMessage();
	engine.Delay(Timeout);
--#PRESSBUTTON
	engine.ListClear();
	engine.DialogBackColor = -1;
	engine.SelectLayout(0);
	engine.ShowMessage();

else

	if(err == 0) then

	engine.SetLineText(2,"#L=读取故障码#R=bmpok");
	engine.ShowMessage();

	end;

end;
print("ggerr:"..err)
engine.LastError = err;
engine.StatValue = statView;

engine.SetLineText(2,"");
engine.ShowMessage();</Script></Function>

