<?xml version="1.0" encoding="utf-8" ?>
<Function>
<Inputs>
<Variable id="SG_Name" type="8" data="" description="ECU short name (according to configfile)"/>
<Variable id="Konfigfile" type="8" data="" description="config file DL24"/>
<Variable id="DL24Pos" type="3" data="0" description="Position of DL24 data inside the vehicle data set"/>
<Variable id="DL24Laenge" type="3" data="0" description="length of DL24 data inside the vehicle data set"/>
<Variable id="Fzd" type="8" data="" description="vehicle data set"/>
<Variable id="Knr" type="8" data="" description="Kennummer (production ID)"/>
<Variable id="DL24Path" type="8" data="" description="path to DL24 directory (ASV list, ZDC, ...)"/>
<Variable id="ASVListfile" type="8" data="" description="ASV list file"/>
<Variable id="ASVCorrected" type="3" data="0" description="d.c. (only existing for compatibility)"/>
<Variable id="SollTeilenummer" type="8" data="" description="corrected / alternative ECU part number"/>
<Variable id="SwapDcTnr" type="8" data="" description="SWaP_DC partnumber: input from FZD / correction list, output: result from SWaP_DCListe"/>
<Variable id="SwapDcBg" type="8" data="" description="Baugruppe SWaP_DC"/>
<Variable id="SWaPDCCorrected" type="8" data="" description="Flag SWaP_DC partnumber corrected"/>
<Variable id="SwapDcTnrPrev" type="8" data="" description="part number (if available) of the SWaP_DC used for the last FAZIT-SWaP request"/>
<Variable id="SWaPErstanfr" type="3" data="0" description="1: preparation of first SWaP-FAZIT-request , 0: first SWaP-FAZIT-request  already done"/>
</Inputs>
<Outputs>
<Variable id="SWaPDCName" type="8" data="" description="SWaP_DC file name"/>
<Variable id="KeyID" type="8" data="" description="KeyID for SWaP function activation"/>
<Variable id="SWaPDCVersInhalt" type="8" data="" description="version information for SWaP_DC"/>
<Variable id="ErgebnisVektor" type="3" data="0" description="result vector according to specification"/>
<Variable id="StatResult" type="3" data="0" description="Statitic result"/>
<Variable id="StatTextValue" type="8" data="" description="Text Value of statistic"/>
<Variable id="StatErrorCode" type="3" data="0" description="Error code of statistic"/>
<Variable id="StatNominalValue" type="8" data="" description="Nominal value of statistic"/>
</Outputs>
<Script>--[[*****************************************************************************
Requirements/ Pre-conditions:
The ASV list has to be correctly structured and the referenced SWaP_DC must exist.
The minimal required version of the ASV list file is 1.23 and the config file must have the corresponding version (for example ASV list version 1.23 and configfile V18).

input parameter:SG_Name,Konfigfile,DL24Pos,DL24Laenge,Fzd,Knr,DL24Path,ASVListfile,ASVCorrected,SollTeilenummer,SwapDcTnr,SwapDcBg,SWaPDCCorrected,SwapDcTnrPrev,SWaPErstanfr
output parameter:SWaPDCName,KeyID,SWaPDCVersInhalt,ErgebnisVektor,StatResult,StatTextValue,StatErrorCode,StatNominalValue

05/16/2017     created by viforce
******************************************************************************--]]

-- return value
SWaPDCName = ""
KeyID = ""
SWaPDCVersInhalt = ""
ErgebnisVektor = 0
StatResult = -1
StatTextValue = ""
StatErrorCode = -1
StatNominalValue = ""
-- return value

local xmlTagSWaP = "SWaP"
local EV_Text = ""
local xmlTagKonfigVerbaupruefung = "KonfigurationVerbaupruefung"
local statstr, XmlContainerPath, sgTnr, zdcTnr, sgBg, zdcBg
local versionKonfgFile =""
local swapTnr, swapBg, swapDCName, ASVSchemaVersion
local aktivSwv, aktivHwv, aktivHkz, aktivASV, aktVorserie
local errFlag = 0
local verbauSg = -1

local modusFTab
local aktKorrSgTnr = -1
local aktTeileaufbr = -1
local aktTeileFreiPrf = -1
local aktFlashen = -1
local aktKorrZDC = -1
local aktZdcProzess = -1
local vorserienFzg = -1
local aktSWaP = -1
local swapDCCorrectedLocal = -1
local flagSWaPGeraten = -1

local swapNullTeileNummer = "V03959000"
local tnr_ignore = "000000000"
local keyID_NO_SWaP = "NO_SWAP_SG"
local keyID_local = ""
local xmlHndl = XmlDocment()


sgTnr,zdcTnr,swapTnr,aktivSwv,aktivHwv,aktivHkz,modusFTab,aktivASV,aktKorrSgTnr,aktTeileaufbr,aktTeileFreiPrf,aktFlashen,aktKorrZDC,aktZdcProzess,aktSWaP,aktVorserie,sgBg,zdcBg,swapBg,versionKonfgFile,vorserienFzg,errFlag = LibVW.GetPartNoFromVehicleData_ASV123(SG_Name,Konfigfile,DL24Pos,DL24Laenge,xmlTagKonfigVerbaupruefung,Fzd)

if(versionKonfgFile &gt;= "V18") then

	if(ErgebnisVektor &lt; 0x40) then
		verbauSg = 0
	end
	
	ErgebnisVektor = 0x00
	
	if(aktivASV == 0) then
		ErgebnisVektor = bit32.bor(ErgebnisVektor,0x01)
		if((SWaPErstanfr ~= 1) and (SwapDcTnrPrev ~= "")) then
			ErgebnisVektor = bit32.bor(ErgebnisVektor,0x40)
		end
		SwapDcTnr = ""
		errFlag = 2001
		engine.LastError = 1
		print("DL24_SWaP_Stat: NOK - SWaP_DC evaluation started, ASV is not active")	
	elseif((aktSWaP ~= 1) or (swapBg == "0000")) then
		ErgebnisVektor = bit32.bor(ErgebnisVektor,0x01)
		if((SWaPErstanfr ~= 1) and (SwapDcTnrPrev ~= "")) then
			ErgebnisVektor = bit32.bor(ErgebnisVektor,0x40)
		end	
		SwapDcTnr = ""
		errFlag = 2004
		engine.LastError = 1
		print("DL24_SWaP_Stat: NOK - SWaP_DC evaluation started, although disabled in Configfile")					
	elseif(verbauSg ~= 0) then
		ErgebnisVektor = bit32.bor(ErgebnisVektor,0x02)
		if((SWaPErstanfr ~= 1) and (SwapDcTnrPrev ~= SwapDcTnr)) then
			ErgebnisVektor = bit32.bor(ErgebnisVektor,0x40)
		end	
		SwapDcTnr = ""
		errFlag = 2002
		engine.LastError = 1
		print("DL24_SWaP_Stat: NOK - SWaP_DC evaluation started after NOK verification")				
	end
	
	if((SWaPDCCorrected == 1) and (verbauSg == 0)) then
		ErgebnisVektor = bit32.bor(ErgebnisVektor,0x10)
	end
	
	print("DL24_SWaP_Stat: Ergebnisvektor vor Auswertung SWaP_DC-Liste: " .. tostring(ErgebnisVektor) .. ",engine.LastError = " .. tostring(engine.LastError))
	
else -- versionKonfgFile &lt; "V18"
	ErgebnisVektor = 0x01
	if((SWaPErstanfr ~= 1) and (SwapDcTnrPrev ~= "")) then
		ErgebnisVektor = bit32.bor(ErgebnisVektor,0x40)
	end
	
	SwapDcTnr = ""
	errFlag = 1958
	engine.LastError = 1
	print("DL24_SWaP_Stat: unerwartete ASV-Version, Konfigfile-Version: " .. tostring(versionKonfgFile))
end

if(((SwapDcTnr == tnr_ignore) or (string.sub(SwapDcTnr,1,9)== swapNullTeileNummer)) and (verbauSg == 0)) then
	ErgebnisVektor = 0x08
	if((SWaPErstanfr ~= 1) and (SwapDcTnrPrev ~= SwapDcTnr)) then
		ErgebnisVektor = bit32.bor(ErgebnisVektor,0x40)
		-- SWaP_DC-Tnr changed to the last SWaP request
	end
	if(SWaPErstanfr == 1) then
		ErgebnisVektor = bit32.bor(ErgebnisVektor,0x20)
		-- Without communication to control unit
	end
	verbauSg = 1
	engine.LastError = 0
end

if(verbauSg == 0) then
	if(engine.LastError == 0) then
		print("DL24_SWaP_Stat: Teilenummer SG: " .. tostring(SollTeilenummer) .. " Len: " .. tostring(#SollTeilenummer))
		print("DL24_SWaP_Stat: Teilenummer SWaP_DC: " .. tostring(SwapDcTnr) .. " Len: " .. tostring(#SwapDcTnr))
		ASVListfile = DL24Path .. "\\" .. ASVListfile
		if(false == xmlHndl.load(ASVListfile)) then
			print("!!!load xml file err ")
			engine.LastError = 1
			errFlag = 1986
			ErgebnisVektor = 0x01
			if((SWaPErstanfr ~= 1) and (SwapDcTnrPrev ~= SwapDcTnr)) then
				ErgebnisVektor = bit32.bor(ErgebnisVektor,0x40)
				-- SWaP_DC-Tnr changed to the last SWaP request
			end
			if(SWaPErstanfr == 1) then
				ErgebnisVektor = bit32.bor(ErgebnisVektor,0x20)
				-- Without communication to control unit
			end			
		else
			local tmpbuf = xmlHndl.selectSingleNode("/AsvListe/Kopfdaten/ASVListenSchemaVersion")
			if(tmpbuf ~= nil) then
				tmpbuf = tmpbuf.text
			else
				tmpbuf = ""
			end	
			ASVSchemaVersion = tmpbuf
			if(ASVSchemaVersion == "") then
				errFlag =1959
				engine.LastError = 1
				ErgebnisVektor = bit32.bor(ErgebnisVektor,0x01)
				if((SWaPErstanfr ~= 1) and (SwapDcTnrPrev ~= SwapDcTnr)) then
					ErgebnisVektor = bit32.bor(ErgebnisVektor,0x40)
					-- SWaP_DC-Tnr changed to the last SWaP request
				end
				if(SWaPErstanfr == 1) then
					ErgebnisVektor = bit32.bor(ErgebnisVektor,0x20)
					-- Without communication to control unit
				end		
				print("DL24_SWaP_Stat, ASV-List version not found")
				engine.StatValue = LibVW.DL24_Errflag2Statstr(errFlag,"")
			elseif(ASVSchemaVersion &lt; "V1.23") then
				errFlag =1958
				engine.LastError = 1
				ErgebnisVektor = bit32.bor(ErgebnisVektor,0x01)
				if((SWaPErstanfr ~= 1) and (SwapDcTnrPrev ~= SwapDcTnr)) then
					ErgebnisVektor = bit32.bor(ErgebnisVektor,0x40)
					-- SWaP_DC-Tnr changed to the last SWaP request
				end
				if(SWaPErstanfr == 1) then
					ErgebnisVektor = bit32.bor(ErgebnisVektor,0x20)
					-- Without communication to control unit
				end		
				print("DL24_SWaP_Stat, unexpected version of ASV-List:" .. tostring(ASVSchemaVersion))
				engine.StatValue = LibVW.DL24_Errflag2Statstr(errFlag,"")						
			end
			print("DL24_SWaP_Stat, ASVListenSchemaVersion: " .. tostring(ASVSchemaVersion))
			if(engine.LastError == 0) then
				KeyID,swapDCName,SWaPDCVersInhalt,errFlag = LibVW.SWaP_TNR_ASV123(xmlHndl,Fzd,Knr,SollTeilenummer,sgBg,SwapDcTnr,SwapDcBg,vorserienFzg)
				if(engine.LastError ~= 0) then
					ErgebnisVektor = bit32.bor(ErgebnisVektor,0x04)
					if(errFlag == 0) then
						errFlag = 2000
					end
				end
				
				keyID_local = string.upper(KeyID)
				if((engine.LastError == 0) and ((keyID_local == keyID_NO_SWaP) or (keyID_local == ""))) then
					print("DL24_SWaP_Stat: Key-ID: NO_SWAP_SG =&gt; reset SwapDcTnr, SWaPDCName, SWaPDCVersInhalt")
					SWaPDCName = ""
					SwapDcTnr = ""
					SWaPDCVersInhalt = ""
					ErgebnisVektor = bit32.bor(ErgebnisVektor,0x08)
					ErgebnisVektor = bit32.band(ErgebnisVektor,0xEF)
				elseif((engine.LastError == 0) and (swapDCName ~= "")) then
					SWaPDCName=swapDCName .. ".xml"
				end
				
				if((SWaPErstanfr ~= 1) and (SwapDcTnrPrev ~= SwapDcTnr)) then
					ErgebnisVektor = bit32.bor(ErgebnisVektor,0x40)
				end
				
				if(SWaPErstanfr == 1) then
					ErgebnisVektor = bit32.bor(ErgebnisVektor,0x20)
				end
				
				print("DL24_SWaP_Stat: SwapDcTnr: " .. tostring(SwapDcTnr) .. ", swapTnr = " .. tostring(swapTnr) .. ", SWaPDCName: " .. tostring(SWaPDCName))
				print("DL24_SWaP_Stat: SWaPDCVersInhalt: " .. tostring(SWaPDCVersInhalt))
				print("DL24_SWaP_Stat: err nach SWaP_TNR_ASV123: " .. tostring(engine.LastError))
			end
			
			if((engine.LastError == 0) and (SWaPDCName ~= "")) then
				XmlContainerPath = DL24Path .. "\\" .. SWaPDCName
				if(false == xmlHndl.load(XmlContainerPath)) then
					print("File not found: " .. tostring(XmlContainerPath))
					engine.LastError = 1
					errFlag = 2005
				end
			end
			
		end
	end
end

StatTarget = tostring(SWaPDCName)
StatNominalValue = tostring(SWaPDCName)

engine.StatValue = "SWaP_DC:" .. tostring(SWaPDCName) .. "/EV:" .. tostring(LibVW.conv1ByteToBinString(ErgebnisVektor)) .. "/"
EV_Text = LibVW.DL24_EV_Text_ASV123(ErgebnisVektor,xmlTagSWaP)
engine.StatValue = engine.StatValue .. "/" .. EV_Text .. "/"
print("DL24_SWaP_Stat, errflag nach Test SWaP_DC-Datei:" .. tostring(errFlag))

if(engine.LastError == 0) then
	StatErrorCode = 0
	StatTextValue = engine.StatValue
	StatResult = 0
else
	engine.StatValue = LibVW.DL24_Errflag2Statstr(errFlag,engine.StatValue)
	StatErrorCode = 1
	StatTextValue = engine.StatValue
	StatResult = 1
end

SWaPDCName = XmlContainerPath
print("DL24_SWaP_Stat, Stats:" .. tostring(engine.StatValue))</Script></Function>

